# FinalProject 중심 최적화된 Docker Compose
# CLIKCA (Click + Assistant) - RAG 기반 업무 보조 AI 비서

version: '3.8'

x-backend-base: &backend-base
  build:
    context: ./FinalProject/backend
    dockerfile: Dockerfile
    target: runtime
  restart: unless-stopped
  environment:
    - DEBUG=${DEBUG:-false}
    - RELOAD=${RELOAD:-false}
    - MYSQL_HOST=mysql
    - MYSQL_PORT=3306
    - MYSQL_DATABASE=${MYSQL_DATABASE:-clikca_db}
    - MYSQL_USER=${MYSQL_USER:-clikca_user}
    - MYSQL_PASSWORD=${MYSQL_PASSWORD:-clikca1234}
    - CHROMA_HOST=chromadb
    - CHROMA_PORT=8000
    - OPENAI_API_KEY=${OPENAI_API_KEY}
    - VOYAGE_API_KEY=${VOYAGE_API_KEY}
  ports:
    - "8000:8000"
  depends_on:
    - mysql
    - chromadb
  networks:
    - skn13_network
  deploy:
    resources:
      limits:
        memory: 512M
      reservations:
        memory: 256M

x-frontend-base: &frontend-base
  build:
    context: ./FinalProject/frontend-ui
    dockerfile: Dockerfile
    target: runtime
  restart: unless-stopped
  environment:
    - NODE_ENV=production
    - VITE_BACKEND_API_URL=${BACKEND_API_URL:-http://localhost:8000}
    - VITE_FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
  ports:
    - "3000:3000"
  depends_on:
    - backend-prod
  networks:
    - skn13_network

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: skn13_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root1234}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-clikca_db}
      MYSQL_USER: ${MYSQL_USER:-clikca_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-clikca1234}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./FinalProject/backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - skn13_network

  # ChromaDB Vector Database
  chromadb:
    image: chromadb/chroma:latest
    container_name: skn13_chromadb
    restart: unless-stopped
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    ports:
      - "8001:8000"
    volumes:
      - chroma_data:/chroma/chroma
    networks:
      - skn13_network

  # FastAPI Backend (Development)
  backend-dev:
    build:
      context: ./FinalProject/backend
      dockerfile: Dockerfile
      target: development
    container_name: skn13_backend_dev
    restart: unless-stopped
    environment:
      - DEBUG=true
      - RELOAD=true
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE:-clikca_db}
      - MYSQL_USER=${MYSQL_USER:-clikca_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-clikca1234}
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VOYAGE_API_KEY=${VOYAGE_API_KEY}
    ports:
      - "8000:8000"
    volumes:
      - ./FinalProject/backend:/app/backend
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - mysql
      - chromadb
    networks:
      - skn13_network
    profiles:
      - development

  # FastAPI Backend (Production)
  backend-prod:
    <<: *backend-base
    container_name: skn13_backend_prod
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    profiles:
      - production

  # React Frontend (Development)
  frontend-dev:
    build:
      context: ./FinalProject/frontend-ui
      dockerfile: Dockerfile
      target: development
    container_name: skn13_frontend_dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - VITE_BACKEND_API_URL=${BACKEND_API_URL:-http://localhost:8000}
      - VITE_FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    ports:
      - "3000:3000"
    volumes:
      - ./FinalProject/frontend-ui:/app
      - /app/node_modules
    depends_on:
      - backend-dev
    networks:
      - skn13_network
    profiles:
      - development

  # React Frontend (Production)
  frontend-prod:
    <<: *frontend-base
    container_name: skn13_frontend_prod
    profiles:
      - production

  # Nginx (Production)
  nginx:
    build:
      context: ./FinalProject/frontend-ui
      dockerfile: Dockerfile
      target: production
    container_name: skn13_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend-prod
    networks:
      - skn13_network
    profiles:
      - production

  # Data Processing Service
  data-processor:
    build:
      context: ./data
      dockerfile: Dockerfile
      target: runtime
    container_name: skn13_data_processor
    restart: unless-stopped
    environment:
      - DEBUG=${DEBUG:-false}
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE:-clikca_db}
      - MYSQL_USER=${MYSQL_USER:-clikca_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-clikca1234}
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
    volumes:
      - ./data:/app
      - ./logs:/app/logs
    depends_on:
      - mysql
      - chromadb
    networks:
      - skn13_network
    profiles:
      - data-processing

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: skn13_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - skn13_network
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

volumes:
  mysql_data:
    driver: local
  chroma_data:
    driver: local
  redis_data:
    driver: local

networks:
  skn13_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16